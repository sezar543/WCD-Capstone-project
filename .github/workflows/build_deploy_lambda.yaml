# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     env:
#       MLFLOW_TRACKING_URI: sqlite:///app/deploy_mlflow/mlruns/mlflow.db
#       AWS_REGION: ${{ secrets.AWS_REGION }}
#       ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Log in to Docker Hub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}

#     - name: Set up Docker
#       run: |
#         docker --version

#     - name: Configure AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v2
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{ secrets.AWS_REGION }}

#     - name: Log in to Amazon ECR
#       run: |
#         aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY


#     - name: Build and tag Docker image
#       run: |
#         docker build -t image-classification-app -f ./docker-lambda/Dockerfile .
#         docker tag image-classification-app:latest $ECR_REGISTRY/my_fastapi_app:latest

#     - name: Push to Amazon ECR
#       run: |
#         docker push $ECR_REGISTRY/my_fastapi_app:latest

#     - name: Update Lambda function
#       run: |
#         aws lambda update-function-code --function-name image-classification-model \
#          --image-uri $ECR_REGISTRY/my_fastapi_app:latest
